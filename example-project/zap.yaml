meta:
  app_id:
  type: #data | channel
  display_name:
  version:
  vendor: shopify
  support_url:
  description:
  contact_email:
  pricing_url: #optional
  #Future: release notes?

runtime: node11

#Rely on conventions for lifecycle (install, upgrade, uninstall, etc.)
#i.e. install.js, upgrade.js, uninstall.js for node11
defaults:
    permissions:
      read:
        - consent
        - lists
        - schema: # can request "schema" for all underlying
          - relationships
          - fields
          - objects
          - identifiers
        - objects:
          - products
          - orders
          - zendesk_tickets
      write:
        - consent
        - lists
        - compliance_consent
        - schema: 
          - relationships
          - fields
          - objects
          - identifiers
        - objects:
          - products
          - orders
          - zendesk_tickets
          - customers
          - events
         
    environment:
      ENV_VAR1: @my_secret@ #inherit defaults

functions:
  foo:
    #Function spec
    entry_point: functions.doFoo
    triggers:
      url: post | get | delete | patch | put // if not included, it is assumed that this function can only be accessed from zap logic (i.e. there is no URL created)
      interval: x seconds | minutes | hours | days | weeks | months
      cron: <cron_expression>
      events:
        - type: consent
          action: opt-in
        - type: list
          action: subscribe

jobs:
  importMyData:
    entry_point: jobs.importMyData
    triggers:
      interval: x seconds | minutes | hours | days | weeks | months
      cron: <cron_expression>
      #Always allow via webhook for testing/debugging

schema: #discuss format
  objects:
    - reviews
  fields:
    - products.fieldname
  relationships:
    - 
