import {FieldValue} from './FieldValue';

type EventFieldValue = FieldValue | EventData | EventData[];

/**
 * Datatype representing the data payload of an event
 */
export interface EventData {
  [field: string]: EventFieldValue;
}

/**
 * The Zaius Event payload, see [V3 Event API](https://api.developer.zaius.com/#tag/Events) for details
 */
export interface Event {
  /**
   * Event type (required), e.g., `product`
   */
  type: string;
  /**
   * Event action, e.g., `detail`
   */
  action?: string;
  /**
   * A set of identifiers that uniquely identify the user the event belongs to.
   * At least one identifier is required.
   */
  identifiers: {
    /**
     * The user's email if known
     */
    email?: string;
    /**
     * Zaius's globally unique identifier generated by SDK's such as the Javascript SDK
     * Only use if you are forwarding a VUID generated by Zaius
     */
    vuid?: string;
    /**
     * Other identifiers known to the account, such as `zaius_alias_my_identifier`
     */
    [field: string]: string | undefined;
  };
  /**
   * The event payload
   */
  data: EventData;
}
